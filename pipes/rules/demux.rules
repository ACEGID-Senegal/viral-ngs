"""
    This is a basic framework for demultiplexing viral read data from
    the Broad Institute's walk-up sequencing platform.
"""

__author__ = 'Kristian Andersen <andersen@broadinstitute.org>, Daniel Park <dpark@broadinstitute.org>'

from snakemake.utils import makedirs
import os, os.path, time, json

def read_samples_file(fname):
    with open(fname, 'rt') as inf:
        for line in inf:
            yield line.strip()

def assert_nonempty_file(fname):
    if not (os.path.isfile(fname) and os.path.getsize(fname)):
        raise Exception()

def update_timestamps(files):
    ''' this dumb function exists because sometimes the different nodes on the
        cluster have out-of-sync system clocks and snakemake fails if the mtime of
        any input file is more recent than the mtimes of the output files
    '''
    for f in files:
        if os.path.isfile(f) and os.path.getmtime(f) > time.time():
            print("input file %s is more recent than present, resetting its modification time to present" % f)
            os.utime(f)

def get_bustard_dir(flowcell):
    # go to /seq/picard/{flowcell}/{latestdir}/info/logs/ID_{latestfile}.json
    # open json file, get cfg['workflow']['runFolder']
    # get {runFolder}/
    pass


rule name_and_sort_bams:
    run:
        pass


def extract_illumina_barcodes(flow_cell, lane, date, directory, read_structure,
        bar_codes, metrics_file, tempdir, max_mismatches=1, min_quality_score=10):
    shell("java -Xmx2g -jar /seq/software/picard/1.802/bin/ExtractIlluminaBarcodes.jar"
        + "BASECALLS_DIR={tempdir}/{date}.{flow_cell}/Data/Intensities/BaseCalls/"
        + "LANE={lane}"
        + "READ_STRUCTURE={read_structure}"
        + "BARCODE_FILE={bar_codes}"
        + "METRICS_FILE={metrics_file}"
        + "MAX_MISMATCHES={max_mismatches}"
        + "MINIMUM_BASE_QUALITY={min_quality_score}"
        + "NUM_PROCESSORS=8")

rule extract_barcodes:
    input:  ""
    output: ""
    params: ""
    run:
            extract_illumina_barcodes()

'''

#-------- DEMULTIPLEXING OF MISEQ AND HISEQ DATA @ BROAD --------#
# Picard directory e.g. /seq/picard/D0N2CACXX/C1-210_2012-02-29_2012-04-12/2
# Bustard directory e.g. /seq/solexaproc/SL-HAW/analyzed/120229_SL-HAW_0168_AFCD0N2CACXX
# Bustard directory can be found by looking in the following file: /seq/picard/<flowcell>/<analysis>/info/logs/ID_xxx.json - look for 'runFolder'
# Barcode for ExtractIlluminaBarcodes e.g. /seq/solexaproc/SL-HAW/analyzed/120229_SL-HAW_0168_AFCD0N2CACXX/Data/Intensities/BaseCalls/barcodeData.2
# Barcode for IlluminaBasecallsToSam e.g. /seq/picard/D0N2CACXX/C1-210_2012-02-29_2012-04-12/2/library_params.txt
# ExtractIlluminaBarcodes barcode example: http://cl.ly/3g1M2D0C2b2C3C0M0h2C
# IlluminaBasecallsToSam barcode example: http://cl.ly/1N2w2n2U3Z431D382Q3j

# CREATE LINKS TO RAW DATA
for directory in /idi/sabeti-scratch/kandersen/analysis/140726_ebola3
do
for date in 140726
do
for flow_cell in H9V8DADXX
do
for temp in $directory/_temp
do
for bustard_dir in /seq/illumina/proc/SL-HBW/140724_SL-HBW_0439_AFCH9V8DADXX
do
bsub -q hour -o $directory/_logs/barcodes.log.bsub.txt -P sabeti_align -J bc.sl
"mkdir -p $temp/$date.$flow_cell/Data/Intensities/BaseCalls"
"ln -s $bustard_dir/Data/Intensities/L00* $temp/$date.$flow_cell/Data/Intensities"
"ln -s $bustard_dir/Data/Intensities/BaseCalls/L00* $temp/$date.$flow_cell/Data/Intensities/BaseCalls"
"ln -s $bustard_dir/Data/Intensities/BaseCalls/barcodeData* $temp/$date.$flow_cell/Data/Intensities/BaseCalls"
done
done
done
done
done

another example:
date = 140726
flow_cell = H9VEKADXX
bustard_dir = /seq/illumina/proc/SL-HBW/140724_SL-HBW_0440_BFCH9VEKADXX



# EXTRACT ILLUMINA BARCODES
for directory in /idi/sabeti-scratch/kandersen/analysis/140726_ebola3 
do
for lane in 1 2
do
for date in 140726
do
for flow_cell in H9VEKADXX H9V8DADXX
do
for temp in $directory/_temp
do
for read_structure in 101T8B8B101T # 151T8B151T 151T6B151T
do
for max_mismatches in 1
do
for min_quality_score in 10
do
for bar_codes in $directory/_logs/barcodes/barcodeData.txt
do
for memory in 8
do
bsub -n 8 -R "span[hosts=1]" -R "rusage[mem=$memory]" -q hour -W 4:00 -o $directory/_logs/barcodes.log.bsub.txt -P sabeti_align -J bc.eb
"java -Xmx2g -jar /seq/software/picard/1.802/bin/ExtractIlluminaBarcodes.jar
    BASECALLS_DIR=$temp/$date.$flow_cell/Data/Intensities/BaseCalls/
    LANE=$lane
    READ_STRUCTURE=$read_structure
    BARCODE_FILE=$bar_codes
    METRICS_FILE=$directory/_logs/barcode.metrics.$flow_cell.$lane.txt
    MAX_MISMATCHES=$max_mismatches
    MINIMUM_BASE_QUALITY=$min_quality_score
    NUM_PROCESSORS=8"
done
done
done
done
done
done
done
done
done
done

# CONVERT RAW FILES TO BAM
for directory in /idi/sabeti-scratch/kandersen/analysis/140726_ebola3
do
for lane in 1 2
do
for date in 140726
do
for flow_cell in H9VEKADXX H9V8DADXX
do
for temp in $directory/_temp
do
for read_structure in 101T8B8B101T # 151T8B151T 151T6B151T
do
for library_parameters in $directory/_logs/barcodes/$flow_cell.$lane.txt
do
bsub -q hour -W 4:00 -R "rusage[mem=54]" -n 8 -R "span[hosts=1]" -o $directory/_logs/barcodes.log.bsub.txt -P sabeti_align -J bc.cs
"java -Xmx10g -jar /seq/software/picard/1.802/bin/IlluminaBasecallsToSam.jar
    BASECALLS_DIR=$temp/$date.$flow_cell/Data/Intensities/BaseCalls/
    LANE=$lane
    READ_STRUCTURE=$read_structure
    LIBRARY_PARAMS=$library_parameters
    SEQUENCING_CENTER=Broad
    RUN_BARCODE=$flow_cell
    NUM_PROCESSORS=8
    ADAPTERS_TO_CHECK=PAIRED_END
    MAX_READS_IN_RAM_PER_TILE=100000
    MAX_RECORDS_IN_RAM=100000
    FORCE_GC=false"
done
done
done
done
done
done
done

'''